// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Error should render correctly 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <Error
    error="Network error!"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": Error {
      "_reactInternalFiber": FiberNode {
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "error": "Network error!",
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "error": "Network error!",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "error": "Network error!",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="my-3 alert alert-warning alert-dismissible"
                                    role="alert"
                  >
                                    <strong>
                                                      Upps, error!
                                    </strong>
                                    Network error!
                                    <button
                                                      type="button"
                                                      class="close"
                                                      data-dismiss="alert"
                                                      aria-label="Close"
                                    >
                                                      <span
                                                                        aria-hidden="true"
                                                      >
                                                                        ×
                                                      </span>
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": "Network error!",
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": "Network error!",
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "error": "Network error!",
                                              }
                }
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="my-3 alert alert-warning alert-dismissible"
                                role="alert"
                >
                                <strong>
                                                Upps, error!
                                </strong>
                                Network error!
                                <button
                                                type="button"
                                                class="close"
                                                data-dismiss="alert"
                                                aria-label="Close"
                                >
                                                <span
                                                                aria-hidden="true"
                                                >
                                                                ×
                                                </span>
                                </button>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "error": "Network error!",
                                                    }
                  }
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": "Network error!",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "error": "Network error!",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": 0,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/home/vladimir/projects/ckan/ckan-widget/ckan-widget/src/components/presentational/Error.js",
            "lineNumber": 16,
          },
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/home/vladimir/projects/ckan/ckan-widget/ckan-widget/src/components/presentational/Error.js",
              "lineNumber": 17,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": null,
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": "Upps, error!",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": "Upps, error!",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": " ",
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": " ",
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": "Network error!",
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": "Network error!",
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/home/vladimir/projects/ckan/ckan-widget/ckan-widget/src/components/presentational/Error.js",
                    "lineNumber": 18,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/home/vladimir/projects/ckan/ckan-widget/ckan-widget/src/components/presentational/Error.js",
                      "lineNumber": 19,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "aria-hidden": "true",
                      "children": "×",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "aria-hidden": "true",
                      "children": "×",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <span
                      aria-hidden="true"
>
                      ×
</span>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "span",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "aria-label": "Close",
                    "children": <span
                      aria-hidden="true"
>
                      ×
</span>,
                    "className": "close",
                    "data-dismiss": "alert",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "aria-label": "Close",
                    "children": <span
                      aria-hidden="true"
>
                      ×
</span>,
                    "className": "close",
                    "data-dismiss": "alert",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <button
                    type="button"
                    class="close"
                    data-dismiss="alert"
                    aria-label="Close"
>
                    <span
                                        aria-hidden="true"
                    >
                                        ×
                    </span>
</button>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "button",
                  "updateQueue": null,
                },
                "stateNode": Network error!,
                "tag": 6,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": null,
              },
              "stateNode": ,
              "tag": 6,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": null,
            },
            "stateNode": <strong>
              Upps, error!
</strong>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "strong",
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <strong>
                Upps, error!
</strong>,
              " ",
              "Network error!",
              <button
                aria-label="Close"
                className="close"
                data-dismiss="alert"
                onClick={[Function]}
                type="button"
>
                <span
                                aria-hidden="true"
                >
                                ×
                </span>
</button>,
            ],
            "className": "my-3 alert alert-warning alert-dismissible",
            "role": "alert",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <strong>
                Upps, error!
</strong>,
              " ",
              "Network error!",
              <button
                aria-label="Close"
                className="close"
                data-dismiss="alert"
                onClick={[Function]}
                type="button"
>
                <span
                                aria-hidden="true"
                >
                                ×
                </span>
</button>,
            ],
            "className": "my-3 alert alert-warning alert-dismissible",
            "role": "alert",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": <div
            class="my-3 alert alert-warning alert-dismissible"
            role="alert"
>
            <strong>
                        Upps, error!
            </strong>
            Network error!
            <button
                        type="button"
                        class="close"
                        data-dismiss="alert"
                        aria-label="Close"
            >
                        <span
                                    aria-hidden="true"
                        >
                                    ×
                        </span>
            </button>
</div>,
          "tag": 5,
          "treeBaseTime": 0,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "error": "Network error!",
        },
        "memoizedState": Object {
          "show": true,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "error": "Network error!",
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "error": "Network error!",
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "error": "Network error!",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "error": "Network error!",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="my-3 alert alert-warning alert-dismissible"
                                    role="alert"
                  >
                                    <strong>
                                                      Upps, error!
                                    </strong>
                                    Network error!
                                    <button
                                                      type="button"
                                                      class="close"
                                                      data-dismiss="alert"
                                                      aria-label="Close"
                                    >
                                                      <span
                                                                        aria-hidden="true"
                                                      >
                                                                        ×
                                                      </span>
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": "Network error!",
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": "Network error!",
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "error": "Network error!",
                                              }
                }
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="my-3 alert alert-warning alert-dismissible"
                                role="alert"
                >
                                <strong>
                                                Upps, error!
                                </strong>
                                Network error!
                                <button
                                                type="button"
                                                class="close"
                                                data-dismiss="alert"
                                                aria-label="Close"
                                >
                                                <span
                                                                aria-hidden="true"
                                                >
                                                                ×
                                                </span>
                                </button>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "error": "Network error!",
                                                    }
                  }
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": "Network error!",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "error": "Network error!",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "handleClose": [Function],
      "props": Object {
        "error": "Network error!",
      },
      "refs": Object {},
      "state": Object {
        "show": true,
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "error": "Network error!",
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="my-3 alert alert-warning alert-dismissible"
        role="alert"
>
        <strong>
                Upps, error!
        </strong>
        Network error!
        <button
                type="button"
                class="close"
                data-dismiss="alert"
                aria-label="Close"
        >
                <span
                        aria-hidden="true"
                >
                        ×
                </span>
        </button>
</div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <strong>
            Upps, error!
</strong>,
          " ",
          "Network error!",
          <button
            aria-label="Close"
            className="close"
            data-dismiss="alert"
            onClick={[Function]}
            type="button"
>
            <span
                        aria-hidden="true"
            >
                        ×
            </span>
</button>,
        ],
        "className": "my-3 alert alert-warning alert-dismissible",
        "role": "alert",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <strong>
            Upps, error!
</strong>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Upps, error!",
          },
          "ref": null,
          "rendered": Array [
            "Upps, error!",
          ],
          "type": "strong",
        },
        " ",
        "Network error!",
        Object {
          "instance": <button
            type="button"
            class="close"
            data-dismiss="alert"
            aria-label="Close"
>
            <span
                        aria-hidden="true"
            >
                        ×
            </span>
</button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-label": "Close",
            "children": <span
              aria-hidden="true"
>
              ×
</span>,
            "className": "close",
            "data-dismiss": "alert",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                aria-hidden="true"
>
                ×
</span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-hidden": "true",
                "children": "×",
              },
              "ref": null,
              "rendered": Array [
                "×",
              ],
              "type": "span",
            },
          ],
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": Error {
        "_reactInternalFiber": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": "Network error!",
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "error": "Network error!",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": "Network error!",
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="my-3 alert alert-warning alert-dismissible"
                                        role="alert"
                    >
                                        <strong>
                                                            Upps, error!
                                        </strong>
                                        Network error!
                                        <button
                                                            type="button"
                                                            class="close"
                                                            data-dismiss="alert"
                                                            aria-label="Close"
                                        >
                                                            <span
                                                                                aria-hidden="true"
                                                            >
                                                                                ×
                                                            </span>
                                        </button>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": "Network error!",
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": "Network error!",
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "error": "Network error!",
                                                    }
                  }
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="my-3 alert alert-warning alert-dismissible"
                                    role="alert"
                  >
                                    <strong>
                                                      Upps, error!
                                    </strong>
                                    Network error!
                                    <button
                                                      type="button"
                                                      class="close"
                                                      data-dismiss="alert"
                                                      aria-label="Close"
                                    >
                                                      <span
                                                                        aria-hidden="true"
                                                      >
                                                                        ×
                                                      </span>
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "error": "Network error!",
                                                          }
                    }
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": "Network error!",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "error": "Network error!",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/home/vladimir/projects/ckan/ckan-widget/ckan-widget/src/components/presentational/Error.js",
              "lineNumber": 16,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/home/vladimir/projects/ckan/ckan-widget/ckan-widget/src/components/presentational/Error.js",
                "lineNumber": 17,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "Upps, error!",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "Upps, error!",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": " ",
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": " ",
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": "Network error!",
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": "Network error!",
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/home/vladimir/projects/ckan/ckan-widget/ckan-widget/src/components/presentational/Error.js",
                      "lineNumber": 18,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/home/vladimir/projects/ckan/ckan-widget/ckan-widget/src/components/presentational/Error.js",
                        "lineNumber": 19,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "aria-hidden": "true",
                        "children": "×",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "aria-hidden": "true",
                        "children": "×",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <span
                        aria-hidden="true"
>
                        ×
</span>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "span",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "aria-label": "Close",
                      "children": <span
                        aria-hidden="true"
>
                        ×
</span>,
                      "className": "close",
                      "data-dismiss": "alert",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "aria-label": "Close",
                      "children": <span
                        aria-hidden="true"
>
                        ×
</span>,
                      "className": "close",
                      "data-dismiss": "alert",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <button
                      type="button"
                      class="close"
                      data-dismiss="alert"
                      aria-label="Close"
>
                      <span
                                            aria-hidden="true"
                      >
                                            ×
                      </span>
</button>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": Network error!,
                  "tag": 6,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": null,
                },
                "stateNode": ,
                "tag": 6,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": null,
              },
              "stateNode": <strong>
                Upps, error!
</strong>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "strong",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <strong>
                  Upps, error!
</strong>,
                " ",
                "Network error!",
                <button
                  aria-label="Close"
                  className="close"
                  data-dismiss="alert"
                  onClick={[Function]}
                  type="button"
>
                  <span
                                    aria-hidden="true"
                  >
                                    ×
                  </span>
</button>,
              ],
              "className": "my-3 alert alert-warning alert-dismissible",
              "role": "alert",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <strong>
                  Upps, error!
</strong>,
                " ",
                "Network error!",
                <button
                  aria-label="Close"
                  className="close"
                  data-dismiss="alert"
                  onClick={[Function]}
                  type="button"
>
                  <span
                                    aria-hidden="true"
                  >
                                    ×
                  </span>
</button>,
              ],
              "className": "my-3 alert alert-warning alert-dismissible",
              "role": "alert",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div
              class="my-3 alert alert-warning alert-dismissible"
              role="alert"
>
              <strong>
                            Upps, error!
              </strong>
              Network error!
              <button
                            type="button"
                            class="close"
                            data-dismiss="alert"
                            aria-label="Close"
              >
                            <span
                                          aria-hidden="true"
                            >
                                          ×
                            </span>
              </button>
</div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "error": "Network error!",
          },
          "memoizedState": Object {
            "show": true,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "error": "Network error!",
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": "Network error!",
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "error": "Network error!",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": "Network error!",
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="my-3 alert alert-warning alert-dismissible"
                                        role="alert"
                    >
                                        <strong>
                                                            Upps, error!
                                        </strong>
                                        Network error!
                                        <button
                                                            type="button"
                                                            class="close"
                                                            data-dismiss="alert"
                                                            aria-label="Close"
                                        >
                                                            <span
                                                                                aria-hidden="true"
                                                            >
                                                                                ×
                                                            </span>
                                        </button>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": "Network error!",
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": "Network error!",
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "error": "Network error!",
                                                    }
                  }
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="my-3 alert alert-warning alert-dismissible"
                                    role="alert"
                  >
                                    <strong>
                                                      Upps, error!
                                    </strong>
                                    Network error!
                                    <button
                                                      type="button"
                                                      class="close"
                                                      data-dismiss="alert"
                                                      aria-label="Close"
                                    >
                                                      <span
                                                                        aria-hidden="true"
                                                      >
                                                                        ×
                                                      </span>
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "error": "Network error!",
                                                          }
                    }
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": "Network error!",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "error": "Network error!",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "handleClose": [Function],
        "props": Object {
          "error": "Network error!",
        },
        "refs": Object {},
        "state": Object {
          "show": true,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "error": "Network error!",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="my-3 alert alert-warning alert-dismissible"
          role="alert"
>
          <strong>
                    Upps, error!
          </strong>
          Network error!
          <button
                    type="button"
                    class="close"
                    data-dismiss="alert"
                    aria-label="Close"
          >
                    <span
                              aria-hidden="true"
                    >
                              ×
                    </span>
          </button>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <strong>
              Upps, error!
</strong>,
            " ",
            "Network error!",
            <button
              aria-label="Close"
              className="close"
              data-dismiss="alert"
              onClick={[Function]}
              type="button"
>
              <span
                            aria-hidden="true"
              >
                            ×
              </span>
</button>,
          ],
          "className": "my-3 alert alert-warning alert-dismissible",
          "role": "alert",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <strong>
              Upps, error!
</strong>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Upps, error!",
            },
            "ref": null,
            "rendered": Array [
              "Upps, error!",
            ],
            "type": "strong",
          },
          " ",
          "Network error!",
          Object {
            "instance": <button
              type="button"
              class="close"
              data-dismiss="alert"
              aria-label="Close"
>
              <span
                            aria-hidden="true"
              >
                            ×
              </span>
</button>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "Close",
              "children": <span
                aria-hidden="true"
>
                ×
</span>,
              "className": "close",
              "data-dismiss": "alert",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <span
                  aria-hidden="true"
>
                  ×
</span>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-hidden": "true",
                  "children": "×",
                },
                "ref": null,
                "rendered": Array [
                  "×",
                ],
                "type": "span",
              },
            ],
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
